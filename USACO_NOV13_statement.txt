1. nocow
给定 N (1 \leq N \leq 100) 个形容词组合, 每个组合至多包含 M (2 \leq M \leq 30) 个不同的形容词. 形容词的类别即形容词在有序组合中的位置. 求第 K 个形容词组合, 即不同类别形容词按照字母序升序排序的序列中第 K 个形容词组合. 这里不含已给出形容词组合.

读入 O(N^2 M)
利用 Contor Expansion 得到第 K 个组合(原始序列) O(M)
与给出组合比较, 若 rank_K > rank_i, 则 K = K+1, 直到遍历所有 i. O(MN)

2. crowded
给定数轴上 N(1 \leq N \leq 50, 000) 个点, 每个点的位置为 x(i), 权重为 h(i), 其中 1 \leq x(i), h(i) \leq 10^9. 给定距离 D(1 \leq D \leq 10^9), 求满足 h(j_k) / h(i) <= 2 (|j_k - i| <= D, j_1 < i, j_2 > i) 的点 i 的个数.

对所有点的位置排序, O(N log N). 
利用树状数组枚举起点, 得到任意区间内权重最大值, O(N log N). 
两趟扫描得到每个 i 对应的范围 |x(j) - x(i)| \leq D 的两端点 j, O(N). 
对于每个点 i, 检查 [x(i) - D, x(i)] 和 [x(i), x(i) + D] 是否同时满足要求. 若该点合法, 则更新计数器. 总时间复杂度O(N log N). 

3.pogocow
给定数轴上 N(1 \leq N \leq 1000) 个点, 每个点位置为 x(i), 权重为 p(i), 其中 1 \leq x(i), p(i) \leq 10^6. 任意选择一个点 i, 沿着某一个方向跳跃. 不妨记每次跳跃的距离为 D_k, 那么满足:
(1) x(i) + \sum\limits_{j = 1}^{k} D_k = x(l), 即每次必须跳跃到给定点上.
(2) D_k \gep D_{k-1} \gep \cdots \gep D_1.
求满足给定形式的跳跃, 可以得到的权重和的最大值.

f_{i,j} 表示起点为 i, 跳到点 j, 所能得到的权重和的最大值; g_{i,j} 表示起点为 i, 跳到点 j, 在这种情况下上一个跳跃点. O(N^3). 
f_{i,j} = max{ f{i,k} + p(j) | x(k) < x(i) and x(k) - x(g_{i,k}) leq x(j) - x(k)}.
g_{i,j} = k.
更进一步, 注意到 f_{i,j} 转移的限制条件为 2x(k) - x(g_{i,k}) \leq x_j, 从而维护有序序列 {2x(k) - x(g_{i,k})}, 并维护其前若干项最大值及其位置. 转移复杂度降至 O(1). 插入 g_{i,j} 复杂度为 O(log N). 总复杂度 O(N^2 log N).
